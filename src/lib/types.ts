// MessageRole - can be either "user" or "model". This helps in distinguishing between messages sent by the user and those generated by the AI model.
export type MessageRole = "user" | "model";

// MessagePart Interface - represents a segment of a message, containing the actual text.
export interface MessagePart {
    text: string;
}

// Message Interface - combines the role (user or model) with an array of MessageParts, structuring each message accordingly.
export interface Message {
    role: MessageRole;
    parts: MessagePart[];
}

// ChatHistory Type - an array of Message objects, representing the entire conversation history.
export interface ChatHistory extends Array<Message> {}

// GenerationConfig -  configures parameters for the AI's response generation, such as temperature for randomness, topP for nucleus sampling, and responseMimeType for the type of response.
export interface GenerationConfig {
    temperature: number;
    topP: number;
    responseMimeType: string;
}

// ChatsSettings - holds settings related to the chat, including the temperature, the AI model to use, and systemInstruction that guides the AI's behavior.
export interface ChatSettings {
    temperature: number;
    model: string;
    systemInstruction: string;
}
